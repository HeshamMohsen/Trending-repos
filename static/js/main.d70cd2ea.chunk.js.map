{"version":3,"sources":["logo.png","components/AppHeader.js","components/Filters.js","components/StarButton.js","components/Repo.js","components/Repos.js","constants/API.js","App.js","index.js"],"names":["AppHeader","className","src","logo","alt","Filters","value","onFilter","showStarred","filterStarred","type","placeholder","onChange","onClick","StarButton","React","memo","repo","starred","starRepoHandler","Repo","name","description","stargazers_count","href","html_url","rel","target","Repos","repos","starredRepos","map","find","star","id","lastWeek","moment","subtract","format","API","App","useState","setRepos","isFetching","setIsFetching","setStarredRepos","filteredRepos","setFilteredRepos","textFilter","setTextFilter","setShowStarred","useEffect","fetch","then","response","json","items","storedStars","JSON","parse","localStorage","getItem","setItem","stringify","useCallback","r","filter","modifiedStars","e","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d70cd2ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.dcfd38a3.png\";","import React from \"react\";\nimport logo from \"../logo.png\";\n\nfunction AppHeader() {\n  return (\n    <header className=\"d-flex justify-content-start align-items-center p-3 mb-2 bg-warning\">\n      <img src={logo} alt=\"majalspace\" />\n      <span className=\"mx-3 text-primary\">Trending Repos</span>\n    </header>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\n\nfunction Filters({ value, onFilter, showStarred, filterStarred }) {\n  return (\n    <div className=\"d-flex justify-content-start align-items-center\">\n      <input\n        className=\"form-control form-control-lg m-3 w-75\"\n        type=\"text\"\n        placeholder=\"search...\"\n        value={value}\n        onChange={onFilter}\n      />\n      <button\n        className={`btn ${showStarred ? \"btn-secondary\" : \"btn-primary\"}`}\n        onClick={filterStarred}\n      >\n        Starred Repos\n      </button>\n    </div>\n  );\n}\n\nexport default Filters;\n","import React from \"react\";\n\nexport const StarButton = React.memo(({ repo, starred, starRepoHandler }) => {\n  return (\n    <button className=\"btn btn-secondary\" onClick={() => starRepoHandler(repo, starred)}>\n      {starred ? \"starred\" : \"star\"}\n    </button>\n  );\n});\n","import React from \"react\";\nimport { StarButton } from \"./StarButton\";\n\nfunction Repo({ repo, starred, starRepoHandler }) {\n  return (\n    <div className=\"card w-75 m-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{repo.name}</h5>\n        <p className=\"card-text\">{repo.description}</p>\n        <span className=\"badge badge-light mr-2 p-3\"> stars: {repo.stargazers_count}</span>\n        <a\n          href={repo.html_url}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          className=\"badge badge-light mr-2 p-3\"\n        >\n          github url\n        </a>\n        <StarButton starred={starred} repo={repo} starRepoHandler={starRepoHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default Repo;\n","import React from \"react\";\nimport Repo from \"./Repo\";\n\nfunction Repos({ repos, starredRepos, starRepoHandler }) {\n  return repos.map((repo) => (\n    <Repo\n      key={repo.id}\n      repo={repo}\n      starred={!!starredRepos.find((star) => star.id === repo.id)}\n      starRepoHandler={starRepoHandler}\n    />\n  ));\n}\n\nexport default Repos;\n","import moment from \"moment\";\n\nconst lastWeek = moment().subtract(7, \"d\").format(\"YYYY-MM-DD\");\nexport const API = `https://api.github.com/search/repositories?q=created:>${lastWeek}&sort=stars&order=desc`;\n","import { useCallback, useEffect, useState } from \"react\";\nimport AppHeader from \"./components/AppHeader\";\nimport Filters from \"./components/Filters\";\nimport Repos from \"./components/Repos\";\nimport { API } from \"./constants/API\";\n\nfunction App() {\n  const [repos, setRepos] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  const [starredRepos, setStarredRepos] = useState([]);\n  const [filteredRepos, setFilteredRepos] = useState([]);\n  const [textFilter, setTextFilter] = useState(\"\");\n  const [showStarred, setShowStarred] = useState(false);\n\n  useEffect(() => {\n    setIsFetching(true);\n    fetch(API)\n      .then((response) => response.json())\n      .then((repos) => {\n        setRepos(repos.items);\n        setFilteredRepos(repos.items);\n        setIsFetching(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    const storedStars = JSON.parse(localStorage.getItem(\"starredRepos\"));\n    if (storedStars) {\n      setStarredRepos(storedStars);\n    } else {\n      localStorage.setItem(\"starredRepos\", JSON.stringify([]));\n    }\n  }, []);\n\n  // search filter\n  const onFilter = (e) => {\n    setTextFilter(e.target.value);\n    if (showStarred) {\n      setFilteredRepos(starredRepos.filter((repo) => repo.name.includes(e.target.value)));\n    } else {\n      setFilteredRepos(repos.filter((repo) => repo.name.includes(e.target.value)));\n    }\n  };\n\n  // filter starred repos\n  const filterStarred = () => {\n    setFilteredRepos(\n      showStarred ? repos : repos.filter((repo) => starredRepos.find((star) => star.id === repo.id))\n    );\n    setShowStarred(!showStarred);\n  };\n\n  // star a repo\n  const starRepoHandler = useCallback(\n    (repo, starred) => {\n      if (starred) {\n        setStarredRepos((r) => [...r].filter(({ id }) => id !== repo.id));\n\n        const modifiedStars = JSON.parse(localStorage.getItem(\"starredRepos\")).filter(\n          ({ id }) => id !== repo.id\n        );\n\n        localStorage.setItem(\"starredRepos\", JSON.stringify(modifiedStars));\n      } else {\n        setStarredRepos((r) => [...r, repo]);\n\n        const modifiedStars = JSON.parse(localStorage.getItem(\"starredRepos\"));\n\n        localStorage.setItem(\"starredRepos\", JSON.stringify([...modifiedStars, repo]));\n      }\n    },\n    [setStarredRepos]\n  );\n\n  if (isFetching || !repos) {\n    return <p className=\"text-center p-3 m-3\">Fetching trending repos...</p>;\n  }\n\n  return (\n    <>\n      <AppHeader />\n      <Filters\n        value={textFilter}\n        onFilter={onFilter}\n        showStarred={showStarred}\n        filterStarred={filterStarred}\n      />\n      <Repos repos={filteredRepos} starredRepos={starredRepos} starRepoHandler={starRepoHandler} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}